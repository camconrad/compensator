/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockGovernor,
  MockGovernorInterface,
} from "../../../contracts/mocks/MockGovernor";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "createProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "voted",
        type: "bool",
      },
    ],
    name: "mockHasVoted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_abstainVotes",
        type: "uint256",
      },
    ],
    name: "mockProposalVotes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalSnapshot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalSnapshots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalStates",
    outputs: [
      {
        internalType: "enum IGovernor.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "againstVotes_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forVotes_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "snapshot",
        type: "uint256",
      },
    ],
    name: "setProposalSnapshot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "enum IGovernor.ProposalState",
        name: "newState",
        type: "uint8",
      },
    ],
    name: "setProposalState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "state",
    outputs: [
      {
        internalType: "enum IGovernor.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526001600655348015601457600080fd5b506109b3806100246000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806352c160bb1161007157806352c160bb146101aa578063544ffc9c146101e257806356781388146102345780635937909a146102475780635cd691ee1461026757806366ee13b31461028757600080fd5b80630fb26697146100b95780632060ece2146100ce5780632d63f693146101115780632e768ebd146101445780633e4f49e6146101575780634385963214610187575b600080fd5b6100cc6100c73660046103de565b6102aa565b005b6100cc6100dc36600461042e565b60009283526002602090815260408085206001600160a01b039490941685529290529120805460ff1916911515919091179055565b61013161011f366004610473565b60009081526001602052604090205490565b6040519081526020015b60405180910390f35b610131610152366004610766565b6102de565b61017a610165366004610473565b60009081526020819052604090205460ff1690565b60405161013b9190610868565b61019a610195366004610890565b610322565b604051901515815260200161013b565b6100cc6101b83660046108bc565b60009384526003602090815260408086209490945560048152838520929092556005909152912055565b6102196101f0366004610473565b600081815260046020908152604080832054600383528184205460059093529220549193909250565b6040805193845260208401929092529082015260600161013b565b6100cc6102423660046108ee565b61034f565b6100cc610255366004610919565b60009182526001602052604090912055565b610131610275366004610473565b60016020526000908152604090205481565b61017a610295366004610473565b60006020819052908152604090205460ff1681565b6000828152602081905260409020805482919060ff191660018360078111156102d5576102d5610852565b02179055505050565b60068054600091829190826102f283610951565b90915550600081815260208181526040808320805460ff1916905560019091529020429055979650505050505050565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff165b92915050565b60008281526002602090815260408083203384529091529020805460ff1916600190811790915560ff821690036103aa57600082815260036020526040812080546001929061039f90849061096a565b909155506103da9050565b8060ff166000036103da5760008281526004602052604081208054600192906103d490849061096a565b90915550505b5050565b600080604083850312156103f157600080fd5b8235915060208301356008811061040757600080fd5b809150509250929050565b80356001600160a01b038116811461042957600080fd5b919050565b60008060006060848603121561044357600080fd5b8335925061045360208501610412565b91506040840135801515811461046857600080fd5b809150509250925092565b60006020828403121561048557600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156104cb576104cb61048c565b604052919050565b600067ffffffffffffffff8211156104ed576104ed61048c565b5060051b60200190565b600082601f83011261050857600080fd5b813561051b610516826104d3565b6104a2565b8082825260208201915060208360051b86010192508583111561053d57600080fd5b602085015b838110156105615761055381610412565b835260209283019201610542565b5095945050505050565b600082601f83011261057c57600080fd5b813561058a610516826104d3565b8082825260208201915060208360051b8601019250858311156105ac57600080fd5b602085015b838110156105615780358352602092830192016105b1565b60008067ffffffffffffffff8411156105e4576105e461048c565b50601f8301601f19166020016105f9816104a2565b91505082815283838301111561060e57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261063657600080fd5b610645838335602085016105c9565b9392505050565b600082601f83011261065d57600080fd5b813561066b610516826104d3565b8082825260208201915060208360051b86010192508583111561068d57600080fd5b602085015b8381101561056157803567ffffffffffffffff8111156106b157600080fd5b6106c0886020838a0101610625565b84525060209283019201610692565b600082601f8301126106e057600080fd5b81356106ee610516826104d3565b8082825260208201915060208360051b86010192508583111561071057600080fd5b602085015b8381101561056157803567ffffffffffffffff81111561073457600080fd5b8601603f8101881361074557600080fd5b610757886020830135604084016105c9565b84525060209283019201610715565b600080600080600060a0868803121561077e57600080fd5b853567ffffffffffffffff81111561079557600080fd5b6107a1888289016104f7565b955050602086013567ffffffffffffffff8111156107be57600080fd5b6107ca8882890161056b565b945050604086013567ffffffffffffffff8111156107e757600080fd5b6107f38882890161064c565b935050606086013567ffffffffffffffff81111561081057600080fd5b61081c888289016106cf565b925050608086013567ffffffffffffffff81111561083957600080fd5b61084588828901610625565b9150509295509295909350565b634e487b7160e01b600052602160045260246000fd5b602081016008831061088a57634e487b7160e01b600052602160045260246000fd5b91905290565b600080604083850312156108a357600080fd5b823591506108b360208401610412565b90509250929050565b600080600080608085870312156108d257600080fd5b5050823594602084013594506040840135936060013592509050565b6000806040838503121561090157600080fd5b82359150602083013560ff8116811461040757600080fd5b6000806040838503121561092c57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b6000600182016109635761096361093b565b5060010190565b808201808211156103495761034961093b56fea264697066735822122096acca172a61a7bb53fa6f3268bdc6e71e9fe2985cfc0ff69e48be3cbe12b6d264736f6c634300081e0033";

type MockGovernorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockGovernorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockGovernor__factory extends ContractFactory {
  constructor(...args: MockGovernorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockGovernor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockGovernor__factory {
    return super.connect(runner) as MockGovernor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockGovernorInterface {
    return new Interface(_abi) as MockGovernorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockGovernor {
    return new Contract(address, _abi, runner) as unknown as MockGovernor;
  }
}

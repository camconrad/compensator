/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockGovernor,
  MockGovernorInterface,
} from "../../../contracts/mocks/MockGovernor";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "castVoteWithReason",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalSnapshot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "snapshot",
        type: "uint256",
      },
    ],
    name: "setProposalSnapshot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "enum IGovernor.ProposalState",
        name: "state_",
        type: "uint8",
      },
    ],
    name: "setProposalState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "power",
        type: "uint256",
      },
    ],
    name: "setVotingPower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "state",
    outputs: [
      {
        internalType: "enum IGovernor.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b507fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054c805460ff19908116600190811790925560026000527fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d805490911690911790556004602052437fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe058190557f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a75561054c806100cc6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80635678138811610066578063567813881461019a5780635937909a146101f05780637b3c71d314610210578063eb9019d414610268578063fa2565891461029e57600080fd5b80630fb26697146100a35780632d63f693146100b85780633e4f49e6146100eb578063438596321461011b578063544ffc9c14610162575b600080fd5b6100b66100b1366004610306565b6102d2565b005b6100d86100c636600461033a565b60009081526004602052604090205490565b6040519081526020015b60405180910390f35b61010e6100f936600461033a565b60009081526003602052604090205460ff1690565b6040516100e29190610369565b6101526101293660046103ad565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60405190151581526020016100e2565b61017f61017036600461033a565b506103e8906107d0906101f490565b604080519384526020840192909252908201526060016100e2565b6100b66101a83660046103ea565b600082815260208181526040808320338085529083528184208054600160ff19918216811790925596855283528184209084529091529020805490921660ff91909116179055565b6100b66101fe36600461040d565b60009182526004602052604090912055565b6100b661021e36600461042f565b5050600082815260208181526040808320338085529083528184208054600160ff19918216811790925596855283528184209084529091529020805490921660ff91909116179055565b6100d86102763660046104b9565b6001600160a01b03919091166000908152600260209081526040808320938352929052205490565b6100b66102ac3660046104e3565b6001600160a01b0390921660009081526002602090815260408083209383529290522055565b6000828152600360205260409020805482919060ff191660018360078111156102fd576102fd610353565b02179055505050565b6000806040838503121561031957600080fd5b8235915060208301356008811061032f57600080fd5b809150509250929050565b60006020828403121561034c57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b602081016008831061038b57634e487b7160e01b600052602160045260246000fd5b91905290565b80356001600160a01b03811681146103a857600080fd5b919050565b600080604083850312156103c057600080fd5b823591506103d060208401610391565b90509250929050565b803560ff811681146103a857600080fd5b600080604083850312156103fd57600080fd5b823591506103d0602084016103d9565b6000806040838503121561042057600080fd5b50508035926020909101359150565b6000806000806060858703121561044557600080fd5b84359350610455602086016103d9565b9250604085013567ffffffffffffffff81111561047157600080fd5b8501601f8101871361048257600080fd5b803567ffffffffffffffff81111561049957600080fd5b8760208284010111156104ab57600080fd5b949793965060200194505050565b600080604083850312156104cc57600080fd5b6104d583610391565b946020939093013593505050565b6000806000606084860312156104f857600080fd5b61050184610391565b9560208501359550604090940135939250505056fea2646970667358221220bf80b31ff43015a52d732f1976ff301e9a412df5a95ed1d7e81343af10315e7464736f6c634300081e0033";

type MockGovernorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockGovernorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockGovernor__factory extends ContractFactory {
  constructor(...args: MockGovernorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockGovernor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockGovernor__factory {
    return super.connect(runner) as MockGovernor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockGovernorInterface {
    return new Interface(_abi) as MockGovernorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockGovernor {
    return new Contract(address, _abi, runner) as unknown as MockGovernor;
  }
}

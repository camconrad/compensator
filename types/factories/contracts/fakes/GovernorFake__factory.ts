/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  GovernorFake,
  GovernorFakeInterface,
} from "../../../contracts/fakes/GovernorFake";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_compToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pauser",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minVotingPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxVotingPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quorumVotes",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "signatures",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "ProposalCreationPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "VotingPaused",
    type: "event",
  },
  {
    inputs: [],
    name: "ABSTAIN",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "AGAINST",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COMP_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FOR",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "bool",
        name: "shouldFail",
        type: "bool",
      },
    ],
    name: "getCurrentVotesWithFailure",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "getRawProposalState",
    outputs: [
      {
        internalType: "enum GovernorFake.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxVotingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minVotingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauser",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCreationPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalStates",
    outputs: [
      {
        internalType: "enum GovernorFake.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "canceled",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "string[]",
        name: "signatures",
        type: "string[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setProposalCreationPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "enum GovernorFake.ProposalState",
        name: "newState",
        type: "uint8",
      },
    ],
    name: "setProposalState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setVotingPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "state",
    outputs: [
      {
        internalType: "enum GovernorFake.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051611e4b380380611e4b83398101604081905261002f91610071565b6001600160a01b039485166080529290931660a0526004556005919091556006556100bf565b80516001600160a01b038116811461006c57600080fd5b919050565b600080600080600060a0868803121561008957600080fd5b61009286610055565b94506100a060208701610055565b6040870151606088015160809098015196999198509695945092505050565b60805160a051611d446101076000396000818161037f015281816103f8015281816104b70152610be001526000818161022d015281816109400152610b610152611d446000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063470b7622116100c3578063a1731a2b1161007c578063a1731a2b146103a1578063ae66c9ea146103a9578063ce46c37a146103b6578063da35c664146103be578063da95691a146103c7578063fe0d94c1146103da57600080fd5b8063470b7622146103155780634f22ce7b1461032857806366ee13b31461033b578063690862761461035e5780638635447a146103715780639fd0506d1461037a57600080fd5b806324bc1a641161011557806324bc1a64146102815780632d254c201461028a5780633099b3d01461029d5780633e4f49e6146102bf5780633f3c2493146102df57806340e58ee51461030257600080fd5b8063013cf08b146101525780630e31f6c2146101fc5780630fb266971461021357806310d41083146102285780631199cf5814610267575b600080fd5b6101b061016036600461140b565b6001602052600090815260409020805460058201546006830154600784015460088501546009860154600a909601546001600160a01b03909516959394929360ff80841694610100909404169288565b604080516001600160a01b03909916895260208901979097529587019490945291151560608601521515608085015260a084015260c083015260e0820152610100015b60405180910390f35b61020560055481565b6040519081526020016101f3565b610226610221366004611424565b6103ed565b005b61024f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101f3565b61026f600081565b60405160ff90911681526020016101f3565b61020560065481565b61022661029836600461146d565b6104ac565b6003546102af90610100900460ff1681565b60405190151581526020016101f3565b6102d26102cd36600461140b565b61058a565b6040516101f3919061149e565b6102d26102ed36600461140b565b60009081526002602052604090205460ff1690565b61022661031036600461140b565b61064c565b610226610323366004611589565b610778565b6102056103363660046115ff565b610b32565b6102d261034936600461140b565b60026020526000908152604090205460ff1681565b61022661036c36600461146d565b610bd5565b61020560045481565b61024f7f000000000000000000000000000000000000000000000000000000000000000081565b61026f600281565b6003546102af9060ff1681565b61026f600181565b61020560005481565b6102056103d5366004611842565b610c90565b6102266103e836600461140b565b610fe3565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104785760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79207061757365722063616e206368616e67652070726f706f73616c20604482015264737461746560d81b60648201526084015b60405180910390fd5b6000828152600260205260409020805482919060ff191660018360078111156104a3576104a3611488565b02179055505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105345760405162461bcd60e51b815260206004820152602760248201527f4f6e6c79207061757365722063616e2070617573652070726f706f73616c20636044820152663932b0ba34b7b760c91b606482015260840161046f565b600380548215156101000261ff001990911617905560405133907fabc2bd25701e3213f2765331a083423ae45b63dc41803a04d2fa6a47f12f61d69061057f90841515815260200190565b60405180910390a250565b6000600260008381526002602052604090205460ff1660078111156105b1576105b1611488565b036105be57506002919050565b600760008381526002602052604090205460ff1660078111156105e3576105e3611488565b036105f057506007919050565b6000828152600160205260409020600681015443116106125750600192915050565b8060090154816008015411801561062f5750600654816008015410155b1561063d5750600492915050565b50600392915050565b50919050565b600160008281526002602052604090205460ff16600781111561067157610671611488565b146106b45760405162461bcd60e51b815260206004820152601360248201527250726f706f73616c206e6f742061637469766560681b604482015260640161046f565b6000818152600160205260409020546001600160a01b0316331461071a5760405162461bcd60e51b815260206004820152601860248201527f4f6e6c792070726f706f7365722063616e2063616e63656c0000000000000000604482015260640161046f565b6000818152600160208181526040808420600701805460ff19908116909417905560029182905280842080549093169091179091555182917f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c91a250565b60035460ff16156107be5760405162461bcd60e51b815260206004820152601060248201526f159bdd1a5b99c81a5cc81c185d5cd95960821b604482015260640161046f565b600160008481526002602052604090205460ff1660078111156107e3576107e3611488565b146108265760405162461bcd60e51b815260206004820152601360248201527250726f706f73616c206e6f742061637469766560681b604482015260640161046f565b600260ff831611156108725760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420737570706f72742076616c756560581b604482015260640161046f565b6000838152600160205260409020600601544311156108c95760405162461bcd60e51b8152602060048201526013602482015272159bdd1a5b99c81c195c9a5bd908195b991959606a1b604482015260640161046f565b6000838152600160209081526040808320338452600b81019092529091205460ff16156109285760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b604482015260640161046f565b6040516370a0823160e01b81523360048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561098f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b3919061192e565b9050600081116109f75760405162461bcd60e51b815260206004820152600f60248201526e2737903b37ba34b733903837bbb2b960891b604482015260640161046f565b60408051608081018252600180825260ff8781166020808501918252848601878152606086018a8152336000908152600b8b019093529690912085518154935161ffff1990941690151561ff00191617610100939094169290920292909217815590519181019190915591519091906002820190610a7590826119ca565b50505060ff841660001901610aa35780826008016000828254610a989190611a9f565b90915550610ae59050565b60ff8416610abf5780826009016000828254610a989190611a9f565b60011960ff851601610ae5578082600a016000828254610adf9190611a9f565b90915550505b84336001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4868487604051610b2393929190611af8565b60405180910390a35050505050565b60008115610b4257506000610bcf565b6040516370a0823160e01b81526001600160a01b0384811660048301527f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610ba8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcc919061192e565b90505b92915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c4d5760405162461bcd60e51b815260206004820152601c60248201527f4f6e6c79207061757365722063616e20706175736520766f74696e6700000000604482015260640161046f565b6003805460ff191682151590811790915560405190815233907f8fe4c5c5df43ea5fb9020a9ca3ef6a74002d093434a20840cb38de263ebdfcde9060200161057f565b600354600090610100900460ff1615610ceb5760405162461bcd60e51b815260206004820152601b60248201527f50726f706f73616c206372656174696f6e206973207061757365640000000000604482015260640161046f565b6000865111610d3c5760405162461bcd60e51b815260206004820152601d60248201527f4d7573742068617665206174206c65617374206f6e6520746172676574000000604482015260640161046f565b8451865114610d985760405162461bcd60e51b815260206004820152602260248201527f5461726765747320616e642076616c756573206c656e677468206d69736d61746044820152610c6d60f31b606482015260840161046f565b8351865114610df85760405162461bcd60e51b815260206004820152602660248201527f5461726765747320616e64207369676e617475726573206c656e677468206d696044820152650e6dac2e8c6d60d31b606482015260840161046f565b8251865114610e575760405162461bcd60e51b815260206004820152602560248201527f5461726765747320616e642063616c6c6461746173206c656e677468206d69736044820152640dac2e8c6d60db1b606482015260840161046f565b6000825111610ea85760405162461bcd60e51b815260206004820152601b60248201527f4465736372697074696f6e2063616e6e6f7420626520656d7074790000000000604482015260640161046f565b600080549080610eb783611b23565b90915550600081815260016020818152604090922080546001600160a01b03191633178155895193945092610ef292918401918a019061123b565b508551610f0890600283019060208901906112a0565b508451610f1e90600383019060208801906112db565b508351610f34906004830190602087019061132d565b504360058201819055600454610f4991611a9f565b6006820190815560078201805461ffff1916905560006008830181905560098301819055600a83018190558381526002602052604090819020805460ff19166001179055600583015491549051339285927f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e092610fd1928d928d928d928d9290918d90611bd4565b60405180910390a35095945050505050565b600460008281526002602052604090205460ff16600781111561100857611008611488565b1461104e5760405162461bcd60e51b8152602060048201526016602482015275141c9bdc1bdcd85b081b9bdd081cdd58d8d95959195960521b604482015260640161046f565b60008181526001602052604090206007810154610100900460ff16156110b65760405162461bcd60e51b815260206004820152601960248201527f50726f706f73616c20616c726561647920657865637574656400000000000000604482015260640161046f565b6007808201805461ff0019166101001790556000838152600260205260409020805460ff1916600183021790555060005b600182015481101561120b57600082600101828154811061110a5761110a611c83565b6000918252602090912001546002840180546001600160a01b03909216918490811061113857611138611c83565b906000526020600020015484600401848154811061115857611158611c83565b9060005260206000200160405161116f9190611c99565b60006040518083038185875af1925050503d80600081146111ac576040519150601f19603f3d011682016040523d82523d6000602084013e6111b1565b606091505b50509050806112025760405162461bcd60e51b815260206004820152601960248201527f50726f706f73616c20657865637574696f6e206661696c656400000000000000604482015260640161046f565b506001016110e7565b5060405182907f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f90600090a25050565b828054828255906000526020600020908101928215611290579160200282015b8281111561129057825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061125b565b5061129c92915061137f565b5090565b828054828255906000526020600020908101928215611290579160200282015b828111156112905782518255916020019190600101906112c0565b828054828255906000526020600020908101928215611321579160200282015b82811115611321578251829061131190826119ca565b50916020019190600101906112fb565b5061129c929150611394565b828054828255906000526020600020908101928215611373579160200282015b82811115611373578251829061136390826119ca565b509160200191906001019061134d565b5061129c9291506113b1565b5b8082111561129c5760008155600101611380565b8082111561129c5760006113a882826113ce565b50600101611394565b8082111561129c5760006113c582826113ce565b506001016113b1565b5080546113da90611947565b6000825580601f106113ea575050565b601f016020900490600052602060002090810190611408919061137f565b50565b60006020828403121561141d57600080fd5b5035919050565b6000806040838503121561143757600080fd5b8235915060208301356008811061144d57600080fd5b809150509250929050565b8035801515811461146857600080fd5b919050565b60006020828403121561147f57600080fd5b610bcc82611458565b634e487b7160e01b600052602160045260246000fd5b60208101600883106114c057634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611505576115056114c6565b604052919050565b60008067ffffffffffffffff841115611528576115286114c6565b50601f8301601f191660200161153d816114dc565b91505082815283838301111561155257600080fd5b828260208301376000602084830101529392505050565b600082601f83011261157a57600080fd5b610bcc8383356020850161150d565b60008060006060848603121561159e57600080fd5b83359250602084013560ff811681146115b657600080fd5b9150604084013567ffffffffffffffff8111156115d257600080fd5b6115de86828701611569565b9150509250925092565b80356001600160a01b038116811461146857600080fd5b6000806040838503121561161257600080fd5b61161b836115e8565b915061162960208401611458565b90509250929050565b600067ffffffffffffffff82111561164c5761164c6114c6565b5060051b60200190565b600082601f83011261166757600080fd5b813561167a61167582611632565b6114dc565b8082825260208201915060208360051b86010192508583111561169c57600080fd5b602085015b838110156116c0576116b2816115e8565b8352602092830192016116a1565b5095945050505050565b600082601f8301126116db57600080fd5b81356116e961167582611632565b8082825260208201915060208360051b86010192508583111561170b57600080fd5b602085015b838110156116c0578035835260209283019201611710565b600082601f83011261173957600080fd5b813561174761167582611632565b8082825260208201915060208360051b86010192508583111561176957600080fd5b602085015b838110156116c057803567ffffffffffffffff81111561178d57600080fd5b61179c886020838a0101611569565b8452506020928301920161176e565b600082601f8301126117bc57600080fd5b81356117ca61167582611632565b8082825260208201915060208360051b8601019250858311156117ec57600080fd5b602085015b838110156116c057803567ffffffffffffffff81111561181057600080fd5b8601603f8101881361182157600080fd5b6118338860208301356040840161150d565b845250602092830192016117f1565b600080600080600060a0868803121561185a57600080fd5b853567ffffffffffffffff81111561187157600080fd5b61187d88828901611656565b955050602086013567ffffffffffffffff81111561189a57600080fd5b6118a6888289016116ca565b945050604086013567ffffffffffffffff8111156118c357600080fd5b6118cf88828901611728565b935050606086013567ffffffffffffffff8111156118ec57600080fd5b6118f8888289016117ab565b925050608086013567ffffffffffffffff81111561191557600080fd5b61192188828901611569565b9150509295509295909350565b60006020828403121561194057600080fd5b5051919050565b600181811c9082168061195b57607f821691505b60208210810361064657634e487b7160e01b600052602260045260246000fd5b601f8211156119c557806000526020600020601f840160051c810160208510156119a25750805b601f840160051c820191505b818110156119c257600081556001016119ae565b50505b505050565b815167ffffffffffffffff8111156119e4576119e46114c6565b6119f8816119f28454611947565b8461197b565b6020601f821160018114611a2c5760008315611a145750848201515b600019600385901b1c1916600184901b1784556119c2565b600084815260208120601f198516915b82811015611a5c5787850151825560209485019460019092019101611a3c565b5084821015611a7a5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b80820180821115610bcf57610bcf611a89565b6000815180845260005b81811015611ad857602081850181015186830182015201611abc565b506000602082860101526020601f19601f83011685010191505092915050565b60ff84168152826020820152606060408201526000611b1a6060830184611ab2565b95945050505050565b600060018201611b3557611b35611a89565b5060010190565b600081518084526020840193506020830160005b82811015611b6e578151865260209586019590910190600101611b50565b5093949350505050565b600082825180855260208501945060208160051b8301016020850160005b83811015611bc857601f19858403018852611bb2838351611ab2565b6020988901989093509190910190600101611b96565b50909695505050505050565b60e0808252885190820181905260009060208a0190610100840190835b81811015611c185783516001600160a01b0316835260209384019390920191600101611bf1565b50508381036020850152611c2c818b611b3c565b9150508281036040840152611c418189611b78565b90508281036060840152611c558188611b78565b90508560808401528460a084015282810360c0840152611c758185611ab2565b9a9950505050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000808354611ca781611947565b600182168015611cbe5760018114611cd357611d03565b60ff1983168652811515820286019350611d03565b86600052602060002060005b83811015611cfb57815488820152600190910190602001611cdf565b505081860193505b50919594505050505056fea2646970667358221220a411aa163e1cd1a3c197d906d90f5d016bdabe0efe209f4620fc79332ac9459064736f6c634300081e0033";

type GovernorFakeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernorFakeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernorFake__factory extends ContractFactory {
  constructor(...args: GovernorFakeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _compToken: AddressLike,
    _pauser: AddressLike,
    _minVotingPeriod: BigNumberish,
    _maxVotingPeriod: BigNumberish,
    _quorumVotes: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _compToken,
      _pauser,
      _minVotingPeriod,
      _maxVotingPeriod,
      _quorumVotes,
      overrides || {}
    );
  }
  override deploy(
    _compToken: AddressLike,
    _pauser: AddressLike,
    _minVotingPeriod: BigNumberish,
    _maxVotingPeriod: BigNumberish,
    _quorumVotes: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _compToken,
      _pauser,
      _minVotingPeriod,
      _maxVotingPeriod,
      _quorumVotes,
      overrides || {}
    ) as Promise<
      GovernorFake & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GovernorFake__factory {
    return super.connect(runner) as GovernorFake__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernorFakeInterface {
    return new Interface(_abi) as GovernorFakeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): GovernorFake {
    return new Contract(address, _abi, runner) as unknown as GovernorFake;
  }
}

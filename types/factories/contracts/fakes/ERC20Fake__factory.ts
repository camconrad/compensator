/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC20Fake,
  ERC20FakeInterface,
} from "../../../contracts/fakes/ERC20Fake";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_pauser",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "BurningPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "MintingPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "shouldFail",
        type: "bool",
      },
    ],
    name: "approveWithFailure",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "burningPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fakeTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauser",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setBurningPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setMintingPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "shouldFail",
        type: "bool",
      },
    ],
    name: "transferWithFailure",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516129ae3803806129ae833981810160405281019061003291906102f4565b8383816003908161004391906105aa565b50806004908161005391906105aa565b505050610070676a9584bed5248eea60c01b6100e860201b60201c565b61008a6753c0ccbd0acd86c360c01b6100e860201b60201c565b816006819055506100ab67fabdd169f221341e60c01b6100e860201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050505061067c565b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61015282610109565b810181811067ffffffffffffffff821117156101715761017061011a565b5b80604052505050565b60006101846100eb565b90506101908282610149565b919050565b600067ffffffffffffffff8211156101b0576101af61011a565b5b6101b982610109565b9050602081019050919050565b60005b838110156101e45780820151818401526020810190506101c9565b60008484015250505050565b60006102036101fe84610195565b61017a565b90508281526020810184848401111561021f5761021e610104565b5b61022a8482856101c6565b509392505050565b600082601f830112610247576102466100ff565b5b81516102578482602086016101f0565b91505092915050565b6000819050919050565b61027381610260565b811461027e57600080fd5b50565b6000815190506102908161026a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102c182610296565b9050919050565b6102d1816102b6565b81146102dc57600080fd5b50565b6000815190506102ee816102c8565b92915050565b6000806000806080858703121561030e5761030d6100f5565b5b600085015167ffffffffffffffff81111561032c5761032b6100fa565b5b61033887828801610232565b945050602085015167ffffffffffffffff811115610359576103586100fa565b5b61036587828801610232565b935050604061037687828801610281565b9250506060610387878288016102df565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806103e557607f821691505b6020821081036103f8576103f761039e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026104607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610423565b61046a8683610423565b95508019841693508086168417925050509392505050565b6000819050919050565b60006104a76104a261049d84610260565b610482565b610260565b9050919050565b6000819050919050565b6104c18361048c565b6104d56104cd826104ae565b848454610430565b825550505050565b600090565b6104ea6104dd565b6104f58184846104b8565b505050565b5b818110156105195761050e6000826104e2565b6001810190506104fb565b5050565b601f82111561055e5761052f816103fe565b61053884610413565b81016020851015610547578190505b61055b61055385610413565b8301826104fa565b50505b505050565b600082821c905092915050565b600061058160001984600802610563565b1980831691505092915050565b600061059a8383610570565b9150826002028217905092915050565b6105b382610393565b67ffffffffffffffff8111156105cc576105cb61011a565b5b6105d682546103cd565b6105e182828561051d565b600060209050601f8311600181146106145760008415610602578287015190505b61060c858261058e565b865550610674565b601f198416610622866103fe565b60005b8281101561064a57848901518255600182019150602085019450602081019050610625565b868310156106675784890151610663601f891682610570565b8355505b6001600288020188555050505b505050505050565b6080516123096106a560003960008181610e1f01528181610eb6015261104f01526123096000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806395d89b41116100ad578063b172eea911610071578063b172eea914610347578063d5abeb0114610363578063dc3d5c9914610381578063dd62ed3e146103b1578063e1a283d6146103e15761012c565b806395d89b41146102a35780639dc29fac146102c15780639fd0506d146102dd578063a9059cbb146102fb578063ad13419d1461032b5761012c565b806340c10f19116100f457806340c10f19146101eb5780635345aa521461020757806357a0767d1461023757806370a0823114610255578063833c1d95146102855761012c565b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017f57806323b872dd1461019d578063313ce567146101cd575b600080fd5b6101396103ff565b6040516101469190611a45565b60405180910390f35b61016960048036038101906101649190611b00565b610491565b6040516101769190611b5b565b60405180910390f35b6101876104b4565b6040516101949190611b85565b60405180910390f35b6101b760048036038101906101b29190611ba0565b6104be565b6040516101c49190611b5b565b60405180910390f35b6101d56104ed565b6040516101e29190611c0f565b60405180910390f35b61020560048036038101906102009190611b00565b6104f6565b005b610221600480360381019061021c9190611c56565b6108d8565b60405161022e9190611b5b565b60405180910390f35b61023f6109b1565b60405161024c9190611b85565b60405180910390f35b61026f600480360381019061026a9190611ca9565b6109b7565b60405161027c9190611b85565b60405180910390f35b61028d6109ff565b60405161029a9190611b5b565b60405180910390f35b6102ab610a12565b6040516102b89190611a45565b60405180910390f35b6102db60048036038101906102d69190611b00565b610aa4565b005b6102e5610e1d565b6040516102f29190611ce5565b60405180910390f35b61031560048036038101906103109190611b00565b610e41565b6040516103229190611b5b565b60405180910390f35b61034560048036038101906103409190611d00565b610e64565b005b610361600480360381019061035c9190611d00565b610ffd565b005b61036b611196565b6040516103789190611b85565b60405180910390f35b61039b60048036038101906103969190611c56565b61119c565b6040516103a89190611b5b565b60405180910390f35b6103cb60048036038101906103c69190611d2d565b611275565b6040516103d89190611b85565b60405180910390f35b6103e96112fc565b6040516103f69190611b5b565b60405180910390f35b60606003805461040e90611d9c565b80601f016020809104026020016040519081016040528092919081815260200182805461043a90611d9c565b80156104875780601f1061045c57610100808354040283529160200191610487565b820191906000526020600020905b81548152906001019060200180831161046a57829003601f168201915b5050505050905090565b60008061049c61130f565b90506104a9818585611317565b600191505092915050565b6000600254905090565b6000806104c961130f565b90506104d6858285611329565b6104e18585856113be565b60019150509392505050565b60006012905090565b61050a676b4be1b65296173b60c01b6114b2565b61051e675012453da05291bb60c01b6114b2565b6105326722dcb5a2ce47294460c01b6114b2565b610546670d017e6c30b47f2660c01b6114b2565b600560009054906101000a900460ff1615610596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058d90611e19565b60405180910390fd5b6105aa675c788aec7755eed960c01b6114b2565b6105be67d0bb98d6a89d777560c01b6114b2565b6105d267e852a8ab3a92f3d160c01b6114b2565b6105e6673142cff5a239e00660c01b6114b2565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c90611e85565b60405180910390fd5b61066967e72084f7a5b3fc4d60c01b6114b2565b61067d67b478c8606096c2eb60c01b6114b2565b610691674088f3748e66c7d160c01b6114b2565b6106a5679f72e9a92f7055b960c01b6114b2565b600081116106e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106df90611ef1565b60405180910390fd5b6106fc67ba555035ac8a6c0a60c01b6114b2565b61071067371a82ae52d375c060c01b6114b2565b61072467ddcfda2bdee248ab60c01b6114b2565b600060065411156107ea5761074367d9cd056b1ed0d26860c01b6114b2565b61075767b335021923c5b19860c01b6114b2565b61076b67894b47d44473c54e60c01b6114b2565b61077f67203ff2fa1614847560c01b6114b2565b600654816007546107909190611f40565b11156107d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c890611fc0565b60405180910390fd5b6107e5673c88a006d335508460c01b6114b2565b6107ff565b6107fe67366a358fb25513eb60c01b6114b2565b5b6108136770cc81439883a01f60c01b6114b2565b61082767f5c2a344167bc2c560c01b6114b2565b61083182826114b5565b61084567783645b035b6459a60c01b6114b2565b80600760008282546108579190611f40565b92505081905550610872670fb0968b30ef882560c01b6114b2565b610886679850ac3363c204eb60c01b6114b2565b8173ffffffffffffffffffffffffffffffffffffffff167f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273826040516108cc9190611b85565b60405180910390a25050565b60006108ee67391bf4eba20c3f4060c01b6114b2565b610902670b4e930844b4d12a60c01b6114b2565b61091667713d6395a5bd9cf960c01b6114b2565b8115610961576109306726c6f85c028a327860c01b6114b2565b61094467503c16031e54b5f860c01b6114b2565b610958670208dbf27bbe796660c01b6114b2565b600090506109aa565b61097567cedf7d6f2a85253160c01b6114b2565b61098967bfc951e672cc433c60c01b6114b2565b61099d674c97978af89e6d5160c01b6114b2565b6109a78484610e41565b90505b9392505050565b60075481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560019054906101000a900460ff1681565b606060048054610a2190611d9c565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4d90611d9c565b8015610a9a5780601f10610a6f57610100808354040283529160200191610a9a565b820191906000526020600020905b815481529060010190602001808311610a7d57829003601f168201915b5050505050905090565b610ab86719e025fa6243e66460c01b6114b2565b610acc67b02b3ab7b663b36960c01b6114b2565b610ae067f2810310a0352c7d60c01b6114b2565b610af46707f73f42caadebbc60c01b6114b2565b600560019054906101000a900460ff1615610b44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3b9061202c565b60405180910390fd5b610b586731ee18d35e1ed20760c01b6114b2565b610b6c67568e75f01ccd5ed560c01b6114b2565b610b80672e095c1622af587760c01b6114b2565b610b936661ecc424ebc60360c01b6114b2565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf990612098565b60405180910390fd5b610c16677ee543911241bdd260c01b6114b2565b610c2a67ffa5ff68bb9b104460c01b6114b2565b610c3e67ee08e2deeefb856560c01b6114b2565b610c52677a7e87c5603c1f0f60c01b6114b2565b60008111610c95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8c90612104565b60405180910390fd5b610ca967ae68f22e9cedaccf60c01b6114b2565b610cbd674c6951ac73362ec360c01b6114b2565b610cd167cb6b1695c55714f960c01b6114b2565b610ce5670e5b2f143498c14760c01b6114b2565b80610cef836109b7565b1015610d30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2790612170565b60405180910390fd5b610d4467150110c93b872a8d60c01b6114b2565b610d58671cd6a9b8b6a53aef60c01b6114b2565b610d6c672f58160818c8cef160c01b6114b2565b610d768282611537565b610d8a673c54ee89ce11dd0960c01b6114b2565b8060076000828254610d9c9190612190565b92505081905550610db7671abdefbc8c7a3c6060c01b6114b2565b610dcb67ec1a9dea1afbede860c01b6114b2565b8173ffffffffffffffffffffffffffffffffffffffff167ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb682604051610e119190611b85565b60405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610e4c61130f565b9050610e598185856113be565b600191505092915050565b610e786719cbc89ef675489e60c01b6114b2565b610e8c6737c8131e0a8a81cc60c01b6114b2565b610ea0675e1d8946c85f803d60c01b6114b2565b610eb4676269ef0e60fc32aa60c01b6114b2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3990612210565b60405180910390fd5b610f56670e02f438eaec9b4460c01b6114b2565b610f6a6726421d2ca6f35b1c60c01b6114b2565b80600560006101000a81548160ff021916908315150217905550610f9867d0bc338f799a99b860c01b6114b2565b610fac67f1d792a963db196d60c01b6114b2565b3373ffffffffffffffffffffffffffffffffffffffff167f41f7ccf53ede21feac83a3736d6a22acabd67321cecc21799874b62ce01d142d82604051610ff29190611b5b565b60405180910390a250565b61101167b3f161837f8bb45860c01b6114b2565b6110256760e342ad8bca697460c01b6114b2565b61103967749b307d2a11de0b60c01b6114b2565b61104d67fdfc4a77268cf5f060c01b6114b2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d29061227c565b60405180910390fd5b6110ef672a134ff530911fc660c01b6114b2565b611103678e739fa7a8a01eab60c01b6114b2565b80600560016101000a81548160ff021916908315150217905550611131676e95cbbd3605f9a560c01b6114b2565b611145679b7ef6c4ec83cfd660c01b6114b2565b3373ffffffffffffffffffffffffffffffffffffffff167f599da4933a9a3e422618bce0b7d1988f042b42b90b57bddd671e5ae8c5e4c2138260405161118b9190611b5b565b60405180910390a250565b60065481565b60006111b2679d801d52c5b4a38660c01b6114b2565b6111c66732e9999efc472ff660c01b6114b2565b6111da67a6af76f48144687a60c01b6114b2565b8115611225576111f46789dcda7c36fce3b860c01b6114b2565b611208676219b820919d517b60c01b6114b2565b61121c67b1ee6b2f233af97a60c01b6114b2565b6000905061126e565b611239673645f387f2f8c5be60c01b6114b2565b61124d67fec68b72c391118660c01b6114b2565b611261674e0c97846d77aa1860c01b6114b2565b61126b8484610491565b90505b9392505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600560009054906101000a900460ff1681565b600033905090565b61132483838360016115b9565b505050565b60006113358484611275565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156113b857818110156113a8578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161139f9392919061229c565b60405180910390fd5b6113b7848484840360006115b9565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114305760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114279190611ce5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114a25760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016114999190611ce5565b60405180910390fd5b6114ad838383611790565b505050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115275760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161151e9190611ce5565b60405180910390fd5b61153360008383611790565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115a95760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115a09190611ce5565b60405180910390fd5b6115b582600083611790565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361162b5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016116229190611ce5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361169d5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016116949190611ce5565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561178a578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516117819190611b85565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117e25780600260008282546117d69190611f40565b925050819055506118b5565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561186e578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016118659392919061229c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118fe578060026000828254039250508190555061194b565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119a89190611b85565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156119ef5780820151818401526020810190506119d4565b60008484015250505050565b6000601f19601f8301169050919050565b6000611a17826119b5565b611a2181856119c0565b9350611a318185602086016119d1565b611a3a816119fb565b840191505092915050565b60006020820190508181036000830152611a5f8184611a0c565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a9782611a6c565b9050919050565b611aa781611a8c565b8114611ab257600080fd5b50565b600081359050611ac481611a9e565b92915050565b6000819050919050565b611add81611aca565b8114611ae857600080fd5b50565b600081359050611afa81611ad4565b92915050565b60008060408385031215611b1757611b16611a67565b5b6000611b2585828601611ab5565b9250506020611b3685828601611aeb565b9150509250929050565b60008115159050919050565b611b5581611b40565b82525050565b6000602082019050611b706000830184611b4c565b92915050565b611b7f81611aca565b82525050565b6000602082019050611b9a6000830184611b76565b92915050565b600080600060608486031215611bb957611bb8611a67565b5b6000611bc786828701611ab5565b9350506020611bd886828701611ab5565b9250506040611be986828701611aeb565b9150509250925092565b600060ff82169050919050565b611c0981611bf3565b82525050565b6000602082019050611c246000830184611c00565b92915050565b611c3381611b40565b8114611c3e57600080fd5b50565b600081359050611c5081611c2a565b92915050565b600080600060608486031215611c6f57611c6e611a67565b5b6000611c7d86828701611ab5565b9350506020611c8e86828701611aeb565b9250506040611c9f86828701611c41565b9150509250925092565b600060208284031215611cbf57611cbe611a67565b5b6000611ccd84828501611ab5565b91505092915050565b611cdf81611a8c565b82525050565b6000602082019050611cfa6000830184611cd6565b92915050565b600060208284031215611d1657611d15611a67565b5b6000611d2484828501611c41565b91505092915050565b60008060408385031215611d4457611d43611a67565b5b6000611d5285828601611ab5565b9250506020611d6385828601611ab5565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611db457607f821691505b602082108103611dc757611dc6611d6d565b5b50919050565b7f4d696e74696e6720697320706175736564000000000000000000000000000000600082015250565b6000611e036011836119c0565b9150611e0e82611dcd565b602082019050919050565b60006020820190508181036000830152611e3281611df6565b9050919050565b7f43616e6e6f74206d696e7420746f207a65726f20616464726573730000000000600082015250565b6000611e6f601b836119c0565b9150611e7a82611e39565b602082019050919050565b60006020820190508181036000830152611e9e81611e62565b9050919050565b7f43616e6e6f74206d696e74207a65726f20746f6b656e73000000000000000000600082015250565b6000611edb6017836119c0565b9150611ee682611ea5565b602082019050919050565b60006020820190508181036000830152611f0a81611ece565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f4b82611aca565b9150611f5683611aca565b9250828201905080821115611f6e57611f6d611f11565b5b92915050565b7f576f756c6420657863656564206d617820737570706c79000000000000000000600082015250565b6000611faa6017836119c0565b9150611fb582611f74565b602082019050919050565b60006020820190508181036000830152611fd981611f9d565b9050919050565b7f4275726e696e6720697320706175736564000000000000000000000000000000600082015250565b60006120166011836119c0565b915061202182611fe0565b602082019050919050565b6000602082019050818103600083015261204581612009565b9050919050565b7f43616e6e6f74206275726e2066726f6d207a65726f2061646472657373000000600082015250565b6000612082601d836119c0565b915061208d8261204c565b602082019050919050565b600060208201905081810360008301526120b181612075565b9050919050565b7f43616e6e6f74206275726e207a65726f20746f6b656e73000000000000000000600082015250565b60006120ee6017836119c0565b91506120f9826120b8565b602082019050919050565b6000602082019050818103600083015261211d816120e1565b9050919050565b7f496e73756666696369656e742062616c616e636520746f206275726e00000000600082015250565b600061215a601c836119c0565b915061216582612124565b602082019050919050565b600060208201905081810360008301526121898161214d565b9050919050565b600061219b82611aca565b91506121a683611aca565b92508282039050818111156121be576121bd611f11565b5b92915050565b7f4f6e6c79207061757365722063616e207061757365206d696e74696e67000000600082015250565b60006121fa601d836119c0565b9150612205826121c4565b602082019050919050565b60006020820190508181036000830152612229816121ed565b9050919050565b7f4f6e6c79207061757365722063616e207061757365206275726e696e67000000600082015250565b6000612266601d836119c0565b915061227182612230565b602082019050919050565b6000602082019050818103600083015261229581612259565b9050919050565b60006060820190506122b16000830186611cd6565b6122be6020830185611b76565b6122cb6040830184611b76565b94935050505056fea2646970667358221220b905b04078621569c03a22d9f542154569b78b3b256cae4e14349af23050cdd364736f6c634300081e0033";

type ERC20FakeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20FakeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Fake__factory extends ContractFactory {
  constructor(...args: ERC20FakeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    _maxSupply: BigNumberish,
    _pauser: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      _maxSupply,
      _pauser,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    _maxSupply: BigNumberish,
    _pauser: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      _maxSupply,
      _pauser,
      overrides || {}
    ) as Promise<
      ERC20Fake & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Fake__factory {
    return super.connect(runner) as ERC20Fake__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20FakeInterface {
    return new Interface(_abi) as ERC20FakeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20Fake {
    return new Contract(address, _abi, runner) as unknown as ERC20Fake;
  }
}
